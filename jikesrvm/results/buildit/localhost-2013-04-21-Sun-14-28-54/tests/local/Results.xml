<results version="1.1">
<name>local</name>
<variant>local</variant>
<revision></revision>
<start-time>2013-04-21T18:31:18Z</start-time>
<end-time>2013-04-21T18:33:36Z</end-time>
<parameters>
</parameters>
<host>
<name>garby.csse.rose-hulman.edu</name>
<parameters>
</parameters>
</host>
<test-configuration>
<build-configuration>BaseBaseMarkSweep</build-configuration>
<name>default</name>
<parameters>
<parameter key="mode" value="/home/csse/trash-man/jikesrvm/dist/BaseBaseMarkSweep_ia32-linux"/>
<parameter key="mode" value=""/>
</parameters>
<group>
<name>gctest</name>
<test>
<name>InlineAllocation</name>
<command><![CDATA[cd /home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest &amp;&amp; /home/csse/trash-man/jikesrvm/dist/BaseBaseMarkSweep_ia32-linux/rvm -X:vm:errorsFatal=true  -Xms60M -Xmx150M      -classpath "/home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest/classes" InlineAllocation base]]></command>
<parameters>
<parameter key='initial.heapsize' value='60'/>
<parameter key='max.heapsize' value='150'/>
<parameter key='time.limit' value='300'/>
<parameter key='extra.args' value=''/>
<parameter key='extra.rvm.args' value=''/>
<parameter key='processors' value='all'/>
<parameter key='max.opt.level' value=''/>
</parameters>
<test-execution><name>default</name>
<exit-code>0</exit-code>
<duration>968</duration>
<result>SUCCESS</result>
<result-explanation></result-explanation>
<output><![CDATA[Approximate scalar allocation size is 38
Approximate small array allocation is 28
Approximate large array allocation is 32
Approximate unknown size array allocation is 31
Overall: SUCCESS
]]></output>
</test-execution>
</test>
<test>
<name>ReferenceTest</name>
<command><![CDATA[cd /home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest &amp;&amp; /home/csse/trash-man/jikesrvm/dist/BaseBaseMarkSweep_ia32-linux/rvm -X:vm:errorsFatal=true  -Xms60M -Xmx150M      -classpath "/home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest/classes" ReferenceTest base]]></command>
<parameters>
<parameter key='initial.heapsize' value='60'/>
<parameter key='max.heapsize' value='150'/>
<parameter key='time.limit' value='300'/>
<parameter key='extra.args' value=''/>
<parameter key='extra.rvm.args' value=''/>
<parameter key='processors' value='all'/>
<parameter key='max.opt.level' value=''/>
</parameters>
<test-execution><name>default</name>
<exit-code>0</exit-code>
<duration>25936</duration>
<result>SUCCESS</result>
<result-explanation></result-explanation>
<output><![CDATA[ReferenceTest checking available size of heap (Mb): 47.300000000000004

Checking weak references and reference queue
Fraction of weak references before GC still live = 1.0     PASS
Fraction of weak references after  GC still live = 0.0     PASS

Checking soft references and reference queue
Fraction of soft references before GC still live = 1.0     PASS
Caught OutOfMemoryError
Fraction of soft references after  GC still live = 0.0     PASS   POOR

ReferenceTest checking available size of heap (Mb): 126.4

Overall: SUCCESS
]]></output>
</test-execution>
</test>
<test>
<name>ReferenceStress</name>
<command><![CDATA[cd /home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest &amp;&amp; /home/csse/trash-man/jikesrvm/dist/BaseBaseMarkSweep_ia32-linux/rvm -X:vm:errorsFatal=true  -Xms60M -Xmx150M      -classpath "/home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest/classes" ReferenceStress base]]></command>
<parameters>
<parameter key='initial.heapsize' value='60'/>
<parameter key='max.heapsize' value='150'/>
<parameter key='time.limit' value='300'/>
<parameter key='extra.args' value=''/>
<parameter key='extra.rvm.args' value=''/>
<parameter key='processors' value='all'/>
<parameter key='max.opt.level' value=''/>
</parameters>
<test-execution><name>default</name>
<exit-code>0</exit-code>
<duration>4880</duration>
<result>SUCCESS</result>
<result-explanation></result-explanation>
<output><![CDATA[Running 2 threads with 5000 entries for 100 iterations
500200 references inserted in 3918ms.
Overall: SUCCESS
]]></output>
</test-execution>
</test>
<test>
<name>FixedLive</name>
<command><![CDATA[cd /home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest &amp;&amp; /home/csse/trash-man/jikesrvm/dist/BaseBaseMarkSweep_ia32-linux/rvm -X:vm:errorsFatal=true  -Xms120M -Xmx150M      -classpath "/home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest/classes" FixedLive base]]></command>
<parameters>
<parameter key='initial.heapsize' value='120'/>
<parameter key='max.heapsize' value='150'/>
<parameter key='time.limit' value='300'/>
<parameter key='extra.args' value=''/>
<parameter key='extra.rvm.args' value=''/>
<parameter key='processors' value='all'/>
<parameter key='max.opt.level' value=''/>
</parameters>
<test-execution><name>default</name>
<exit-code>0</exit-code>
<duration>36355</duration>
<result>SUCCESS</result>
<result-explanation></result-explanation>
<output><![CDATA[FixedLive running with 30 Mb fixed live data

Estimated object size of a 4-field object (2 int, 2 ref) is 24 bytes
Header size is probably 8 bytes
Note that the results of this test are not too meaningful for a generational collector
Creating live data: tree with 1310720 nodes
Allocating 2048 Mb or until 5 GCs have occurred or until we would exceed 200.0 secs.
First 0GC's are excluded from overall statistics

GC occurred (2.842 s) after 2.257s : tracing rate = 10.5555 Mb/s   allocation rate = 27.8755 Mb/s
GC occurred (0.219 s) after 0.002s : tracing rate = 136.9865 Mb/s   allocation rate = 65.5365 Mb/s
GC occurred (3.178 s) after 3.636s : tracing rate = 9.4395 Mb/s   allocation rate = 31.3265 Mb/s
GC occurred (5.628 s) after 4.665s : tracing rate = 5.3305 Mb/s   allocation rate = 25.3155 Mb/s
GC occurred (3.17 s) after 6.681s : tracing rate = 9.4635 Mb/s   allocation rate = 17.6765 Mb/s

         Tracing rate: 34.3555 Mb/s, sigma 51.3465 Mb/s, z-score 1.4945
      Allocation rate: 33.5465 Mb/s, sigma 16.6135 Mb/s, z-score 0.4955

     Total Setup Time: 2.8975 s
Total Allocation Time: 17.2415 s
   Total Tracing Time: 15.0375 s

Overall: SUCCESS
]]></output>
</test-execution>
</test>
<test>
<name>LargeAlloc</name>
<command><![CDATA[cd /home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest &amp;&amp; /home/csse/trash-man/jikesrvm/dist/BaseBaseMarkSweep_ia32-linux/rvm -X:vm:errorsFatal=true  -Xms60M -Xmx150M      -classpath "/home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest/classes" LargeAlloc base]]></command>
<parameters>
<parameter key='initial.heapsize' value='60'/>
<parameter key='max.heapsize' value='150'/>
<parameter key='time.limit' value='300'/>
<parameter key='extra.args' value=''/>
<parameter key='extra.rvm.args' value=''/>
<parameter key='processors' value='all'/>
<parameter key='max.opt.level' value=''/>
</parameters>
<test-execution><name>default</name>
<exit-code>0</exit-code>
<duration>37542</duration>
<result>SUCCESS</result>
<result-explanation></result-explanation>
<output><![CDATA[LargeAlloc running with 500 Mb of allocation
Run with verbose GC on and make sure space accounting is not leaking

Allocated 100 Mb at time 6.984 sec
Allocated 200 Mb at time 16.938 sec
Allocated 300 Mb at time 25.358 sec
Allocated 400 Mb at time 31.479 sec

After allocation, usedMemory has increased by 0.59765625 Mb
Overall: SUCCESS
]]></output>
</test-execution>
</test>
<test>
<name>Exhaust</name>
<command><![CDATA[cd /home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest &amp;&amp; /home/csse/trash-man/jikesrvm/dist/BaseBaseMarkSweep_ia32-linux/rvm -X:vm:errorsFatal=true  -Xms50M -Xmx75M      -classpath "/home/csse/trash-man/jikesrvm/target/tests/local/BaseBaseMarkSweep/gctest/classes" Exhaust base]]></command>
<parameters>
<parameter key='initial.heapsize' value='50'/>
<parameter key='max.heapsize' value='75'/>
<parameter key='time.limit' value='300'/>
<parameter key='extra.args' value=''/>
<parameter key='extra.rvm.args' value=''/>
<parameter key='processors' value='all'/>
<parameter key='max.opt.level' value=''/>
</parameters>
<test-execution><name>default</name>
<exit-code>0</exit-code>
<duration>30596</duration>
<result>SUCCESS</result>
<result-explanation></result-explanation>
<output><![CDATA[Max heap size: 78643200 bytes
  that's 75.0 megabytes
Starting round 1 with size = 64
  Allocating until exception thrown
  Caught OutOfMemory - freeing now
  Had 57266112 bytes allocated; failed trying to allocate 64 bytes
Starting round 2 with size = 640
  Allocating until exception thrown
  Caught OutOfMemory - freeing now
  Had 56113280 bytes allocated; failed trying to allocate 640 bytes
Starting round 3 with size = 6400
  Allocating until exception thrown
  Caught OutOfMemory - freeing now
  Had 56089600 bytes allocated; failed trying to allocate 6400 bytes
Starting round 4 with size = 64000
  Allocating until exception thrown
  Caught OutOfMemory - freeing now
  Had 70080000 bytes allocated; failed trying to allocate 64000 bytes
Starting round 5 with size = 640000
  Allocating until exception thrown
  Caught OutOfMemory - freeing now
  Had 71040000 bytes allocated; failed trying to allocate 640000 bytes
Overall: SUCCESS
]]></output>
</test-execution>
</test>
</group>
</test-configuration>
</results>
